{"version":3,"sources":["App.js","index.js"],"names":["matrix","base","Array","Math","pow","fill","matrix100","r","g","b","x","App","useState","data","setData","size","setSize","padding","setPadding","resolution","setResolution","fps","setFps","useEffect","id","setInterval","map","random","clearInterval","type","value","min","max","onChange","ev","Number","currentTarget","PixelGrid","options","background","ReactDOM","render","document","getElementById"],"mappings":"wNAIMA,EAAS,SAAAC,GAAI,OAAIC,MAAMC,KAAKC,IAAIH,EAAM,IAAII,KAAK,IAE/CC,EAAYN,EADH,KAoDf,IAAMO,EAAI,OACJC,EAAI,OACJC,EAAI,OACJC,EAAI,OAEKC,EAtDf,WAAgB,IAAD,EACWC,mBAASN,GADpB,mBACNO,EADM,KACAC,EADA,OAEWF,mBAAS,GAFpB,mBAENG,EAFM,KAEAC,EAFA,OAGiBJ,mBAAS,GAH1B,mBAGNK,EAHM,KAGGC,EAHH,OAIuBN,mBAPvB,KAGA,mBAINO,EAJM,KAIMC,EAJN,OAKSR,mBAAS,IALlB,mBAKNS,EALM,KAKDC,EALC,KAgBb,OATAC,qBAAU,WACR,IAAIC,EACFC,aACE,kBAAMX,EAAQd,EAAOmB,GAAc,GAAGd,KAAK,GAAGqB,IAAIvB,KAAKwB,WACvD,KAAQN,GAAO,OAEnB,OAAO,kBAAMO,cAAcJ,MAC1B,CAACL,EAAYE,IAGd,gDACW,2BAAOQ,KAAK,SAASC,MAAOf,EAAMgB,IAAK,EAAGC,IAAK,GAAIC,SAAU,SAAAC,GAAE,OAAIlB,EAAQb,KAAK4B,IAAI,GAAII,OAAOD,EAAGE,cAAcN,YAD3H,YAEW,2BAAOD,KAAK,SAASC,MAAOb,EAASc,IAAK,EAAGC,IAAK,GAAIC,SAAU,SAAAC,GAAE,OAAIhB,EAAWf,KAAK4B,IAAI,GAAII,OAAOD,EAAGE,cAAcN,YAFjI,eAGc,2BAAOD,KAAK,SAASC,MAAOX,EAAYY,IAAK,EAAGC,IAAK,IAAKC,SAAU,SAAAC,GAAE,OAAId,EAAcjB,KAAK4B,IAAI,IAAKI,OAAOD,EAAGE,cAAcN,YAH5I,QAIO,2BAAOD,KAAK,SAASC,MAAOT,EAAKU,IAAK,EAAGC,IAAK,IAAKC,SAAU,SAAAC,GAAE,OAAIZ,EAAOnB,KAAK4B,IAAI,GAAII,OAAOD,EAAGE,cAAcN,YAEpH,kBAACO,EAAA,EAAD,CACExB,KAAMA,EACNyB,QAAS,CACPvB,OACAE,UACAsB,WAAY,CAAC,EAAG,EAAG,MAMvB,kBAACF,EAAA,EAAD,CACExB,KAAM,CACJH,EAAGH,EAAGG,EAAGF,EAAGE,EAAGD,EACfF,EAAGG,EAAGF,EAAGE,EAAGD,EAAGC,EACfA,EAAGH,EAAGG,EAAGF,EAAGE,EAAGD,EACfF,EAAGG,EAAGF,EAAGE,EAAGD,EAAGC,EACfA,EAAGH,EAAGG,EAAGF,EAAGE,EAAGD,EACfF,EAAGG,EAAGF,EAAGE,EAAGD,EAAGC,GAEjB4B,QAAS,CAAErB,QAAS,OC9C5BuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a44c4107.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PixelGrid from \"react-pixel-grid\";\n\n\nconst matrix = base => Array(Math.pow(base, 2)).fill(0);\nconst defRes = 150;\nconst matrix100 = matrix(defRes)\n\nfunction App() {\n  const [data, setData] = useState(matrix100);\n  const [size, setSize] = useState(4);\n  const [padding, setPadding] = useState(1);\n  const [resolution, setResolution] = useState(defRes);\n  const [fps, setFps] = useState(60);\n\n  useEffect(() => {\n    let id =\n      setInterval(\n        () => setData(matrix(resolution || 0).fill(0).map(Math.random)),\n        1000 / (fps || 0.00001)\n      );\n    return () => clearInterval(id);\n  }, [resolution, fps]);\n\n  return (\n    <>\n      px size: <input type=\"number\" value={size} min={0} max={20} onChange={ev => setSize(Math.min(20, Number(ev.currentTarget.value)))} />\n      padding: <input type=\"number\" value={padding} min={0} max={20} onChange={ev => setPadding(Math.min(20, Number(ev.currentTarget.value)))} />\n      resolution: <input type=\"number\" value={resolution} min={1} max={600} onChange={ev => setResolution(Math.min(600, Number(ev.currentTarget.value)))} />\n      fps: <input type=\"number\" value={fps} min={1} max={100} onChange={ev => setFps(Math.min(80, Number(ev.currentTarget.value)))} />\n\n      <PixelGrid\n        data={data}\n        options={{\n          size,\n          padding,\n          background: [1, 1, 1],\n        }}\n      />\n\n\n      {/* prettier-ignore */}\n      <PixelGrid\n        data={[\n          x, r, x, g, x, b,\n          r, x, g, x, b, x,\n          x, r, x, g, x, b,\n          r, x, g, x, b, x,\n          x, r, x, g, x, b,\n          r, x, g, x, b, x,\n        ]}\n        options={{ padding: 0 }}\n      />\n    </>\n  );\n}\n\nconst r = \"#f00\";\nconst g = \"#0f0\";\nconst b = \"#00f\";\nconst x = \"#000\";\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}