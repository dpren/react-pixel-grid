{"version":3,"sources":["dist/PixelGrid.js","App.js","index.js"],"names":["_ref","_ref$data","data","_ref$options","options","props","_objectWithoutProperties","_useState","useState","_useState2","_slicedToArray","grid","setGrid","container","useRef","useEffect","console","log","pixelGrid","_objectSpread","root","current","Object","values","flat","update","React","createElement","assign","ref","r","g","b","x","App","Array","fill","setData","id","setInterval","map","Math","random","clearInterval","PixelGrid","size","padding","background","ReactDOM","render","document","getElementById"],"mappings":"2PAKgB,WAAUA,GACxB,IAAIC,EAAYD,EAAKE,KACjBA,OAAqB,IAAdD,EAAuB,GAAKA,EACnCE,EAAeH,EAAKI,QACpBA,OAA2B,IAAjBD,EAA0B,GAAKA,EACzCE,EAAQC,YAAyBN,EAAM,CAAC,OAAQ,YAEhDO,EAAYC,qBACZC,EAAaC,YAAeH,EAAW,GACvCI,EAAOF,EAAW,GAClBG,EAAUH,EAAW,GAErBI,EAAYC,mBAWhB,OAVAC,qBAAU,WACRC,QAAQC,IAAI,WACZL,EAAQM,IAAUhB,EAAMiB,YAAc,GAAIf,EAAS,CACjDgB,KAAMP,EAAUQ,cAEjBC,OAAOC,OAAOnB,GAASoB,QAC1BT,qBAAU,WACHJ,GACLA,EAAKc,OAAOvB,MAEMwB,IAAMC,cAAc,MAAOL,OAAOM,OAAO,CAC3DC,IAAKhB,GACJR,KC3BCyB,EAAI,OACJC,EAAI,OACJC,EAAI,OACJC,EAAI,OAyCKC,MAvCf,WAAgB,IAAD,EACW1B,mBAAS2B,MAAM,KAAKC,KAAK,IADpC,mBACNlC,EADM,KACAmC,EADA,KAUb,OARAtB,qBAAU,WACR,IAAIuB,EAAKC,aACP,kBAAMF,EAAQF,MAAM,KAAKC,KAAK,GAAGI,IAAIC,KAAKC,WAC1C,IAEF,OAAO,kBAAMC,cAAcL,MAC1B,IAGD,6BACE,kBAACM,EAAD,CACE1C,KAAMA,EACNE,QAAS,CACPyC,KAAM,GACNC,QAAS,EACTC,WAAY,CAAC,EAAG,GAAK,MAIzB,6BAGA,kBAACH,EAAD,CACE1C,KAAM,CACJ+B,EAAGH,EAAGG,EAAGF,EAAGE,EAAGD,EACfF,EAAGG,EAAGF,EAAGE,EAAGD,EAAGC,EACfA,EAAGH,EAAGG,EAAGF,EAAGE,EAAGD,EACfF,EAAGG,EAAGF,EAAGE,EAAGD,EAAGC,EACfA,EAAGH,EAAGG,EAAGF,EAAGE,EAAGD,EACfF,EAAGG,EAAGF,EAAGE,EAAGD,EAAGC,GAEjB7B,QAAS,CAAE0C,QAAS,OCpC5BE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.12e97284.chunk.js","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport pixelGrid from \"pixel-grid\";\nexport default (function (_ref) {\n  var _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      _ref$options = _ref.options,\n      options = _ref$options === void 0 ? {} : _ref$options,\n      props = _objectWithoutProperties(_ref, [\"data\", \"options\"]);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      grid = _useState2[0],\n      setGrid = _useState2[1];\n\n  var container = useRef();\n  useEffect(function () {\n    console.log('setGrid');\n    setGrid(pixelGrid(data, _objectSpread({}, options, {\n      root: container.current\n    })));\n  }, Object.values(options).flat());\n  useEffect(function () {\n    if (!grid) return;\n    grid.update(data);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: container\n  }, props));\n});","import React, { useState, useEffect } from \"react\";\nimport PixelGrid from \"./dist/PixelGrid\";\n\nconst r = \"#f00\";\nconst g = \"#0f0\";\nconst b = \"#00f\";\nconst x = \"#000\";\n\nfunction App() {\n  const [data, setData] = useState(Array(100).fill(0));\n  useEffect(() => {\n    let id = setInterval(\n      () => setData(Array(100).fill(0).map(Math.random)),\n      10\n    );\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <div>\n      <PixelGrid\n        data={data}\n        options={{\n          size: 10,\n          padding: 2,\n          background: [0, 0.5, 1],\n        }}\n      />\n\n      <br />\n\n      {/* prettier-ignore */}\n      <PixelGrid\n        data={[\n          x, r, x, g, x, b, \n          r, x, g, x, b, x, \n          x, r, x, g, x, b, \n          r, x, g, x, b, x, \n          x, r, x, g, x, b, \n          r, x, g, x, b, x,\n        ]}\n        options={{ padding: 0 }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}